#+STARTUP: showall
#+TITLE: Timing Fundamental Operations
#+SUBTITLE: CIS 310: Operating Systems
#+AUTHOR: Brian C. Ladd
#+DATE: Fall 2018

* Introduction
This set of programs times function calls, system calls, and context switches on a computer. This file includes the results of timing on a particular computer.

* Provided Code
The three executables do *not* time anything at the moment. You should fix that and remove this section from this file. You should also fill in the next section on some particular computer. Please run all three timings on the same machine.

* Timing Results
Run the programs on a given hardware/OS platform. You should find a loop count that is large enough that doubling it does not significantly change the time per operation. You will want to run it with small and then larger counts until running it with n and 2n produces times within 20% of one another.

In this section, include the number of loops for each program, and the time per operation. Also report the type of CPU (Intel, AMD, ARM), core count, and the clock speed if you know it. lshw (even run as non-root user) should let you find the CPU clock.

* To Clean
Removes all compiled files so that the next compilation will be complete rather than
incremental.
#+BEGIN_SRC shell
make clean
#+END_SRC

* To Compile
** Time to compile: note that /Catch 2/ is very large. Compiling =testBitMap.cpp= takes ~30 seconds
#+BEGIN_SRC shell
make
#+END_SRC

* To Test
See *To Run* below; the running behavior for this program is to run the bit map tests.

* To Run
Each project, when built, shows the name of the executable as the parameter of the -o commandline argument. So, in pBitMap, the commandline make uses is something like
#+BEGIN_SRC shell
g++ -std=c++17 -Wall -Werror -g  -o build/testBitMap ...
#+END_SRC

This tells you that the executable is build in =./build/testBitMap=. The executable is named in the =Makefile=; the source files containing the =main= function is in =src/tools/=.

To run the program, type its path at the commandline
#+BEGIN_SRC shell
build/testBitMap
#+END_SRC

If it takes commandline parameters, they come after the executable
